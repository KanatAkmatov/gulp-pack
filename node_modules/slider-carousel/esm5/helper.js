import { Injectable, ComponentFactoryResolver, ApplicationRef, Injector, EmbeddedViewRef, ComponentRef } from '@angular/core';
import { Observable } from 'rxjs';
import { SliderCarouselPreviewComponent } from './slider-carousel-preview/slider-carousel-preview.component';
import { isNullOrUndefined } from 'util';
var Helper = /** @class */ (function () {
    function Helper(componentFactoryResolver, appRef, injector) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.appRef = appRef;
        this.injector = injector;
    }
    Helper.prototype.openPreview = function (data) {
        if (data === void 0) { data = {}; }
        var onCloseSubscribe;
        var object;
        object = {
            onClose: new Observable(function (subscribe) { return onCloseSubscribe = subscribe; }),
            instance: null
        };
        var componenRef = this.createComponent(SliderCarouselPreviewComponent, data, function (data) {
            onCloseSubscribe.next(data);
        });
        object.instance = componenRef.instance;
        return object;
    };
    Helper.prototype.createComponent = function (component, data, onClose) {
        var _this = this;
        var componentRef = this.componentFactoryResolver
            .resolveComponentFactory(component)
            .create(this.injector);
        if (!data)
            data = {};
        data.close = function (data) {
            _this.appRef.detachView(componentRef.hostView);
            componentRef.destroy();
            if (onClose)
                onClose(data);
        };
        Object.assign(componentRef.instance, { modalRef: data });
        this.appRef.attachView(componentRef.hostView);
        var domElem = componentRef.hostView.rootNodes[0];
        document.body.appendChild(domElem);
        return componentRef;
    };
    Helper.prototype.smoothScroll = function (element, scroll, duration, direction) {
        if (duration === void 0) { duration = 400; }
        if (direction === void 0) { direction = 'top'; }
        var start = direction === 'top' ? element.scrollTop : element.scrollLeft;
        if (scroll < 0)
            scroll = 0;
        var distance = (scroll - start) - 77;
        var startTime = new Date().getTime();
        if (!duration)
            duration = 400;
        var easeInOutQuart = function (time, from, distance, duration) {
            if ((time /= duration / 2) < 1)
                return distance / 2 * time * time * time * time + from;
            return -distance / 2 * ((time -= 2) * time * time * time - 2) + from;
        };
        var timer = setInterval(function () {
            var time = new Date().getTime() - startTime, newScroll = easeInOutQuart(time, start, distance, duration);
            if (time >= duration) {
                clearInterval(timer);
                timer = null;
            }
            if (element.scrollTo) {
                if (direction === 'top')
                    element.scrollTo(element.scrollLeft, newScroll);
                else
                    element.scrollTo(newScroll, element.scrollTop);
            }
            else {
                if (direction === 'top')
                    element.scrollTop = newScroll;
                else
                    element.scrollLeft = newScroll;
            }
        }, 1000 / 60);
        return timer;
    };
    Helper.prototype.elementIsChild = function (element, parentElment) {
        try {
            while (!isNullOrUndefined(element) && element.tagName.toUpperCase() !== 'BODY') {
                if (element === parentElment) {
                    return true;
                }
                element = element.parentNode;
            }
            return false;
        }
        catch (_a) {
            return false;
        }
    };
    Helper.prototype.isMobileDevice = function () {
        return (typeof window.orientation !== "undefined") || (navigator.userAgent.indexOf('IEMobile') !== -1);
    };
    Helper.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: ApplicationRef },
        { type: Injector }
    ]; };
    Helper.decorators = [
        { type: Injectable }
    ];
    Helper.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: ApplicationRef },
        { type: Injector }
    ]; };
    return Helper;
}());
export { Helper };
//# sourceMappingURL=data:application/json;base64,